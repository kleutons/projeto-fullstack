services:
  backend:
    image: 'docker-spring-boot:latest'
    container_name: backend
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.SpringBoot
    tty: true  
    depends_on:
      db_postgresql:
        condition: service_healthy  
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_postgresql:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    restart: unless-stopped  
    ports:
        - 18080:8080  
    networks:
        - projeto-integrado-network  
          
  db_postgresql:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.Postgre
    container_name: db_postgresql
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes: 
          - ./database/data:/var/lib/postgresql/data
    ports:
        - 25432:5432  
    networks:
        - projeto-integrado-network    
        
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.React
    ports: 
      - "13000:3000"
    networks:
        - projeto-integrado-network  
    volumes: 
      - ./frontend/node_modules        
      
networks:
    projeto-integrado-network:
        driver: bridge
